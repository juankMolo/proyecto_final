server.port=8080

# Configuraci√≥n de Resilience4j para el Circuit Breaker
resilience4j.circuitbreaker.instances.microusersCircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.microusersCircuitBreaker.slidingWindowSize=20
resilience4j.circuitbreaker.instances.microusersCircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.microusersCircuitBreaker.waitDurationInOpenState=10000
resilience4j.circuitbreaker.instances.microusersCircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.microusersCircuitBreaker.recordExceptions=java.io.IOException,org.springframework.web.client.HttpServerErrorException,org.springframework.web.client.ResourceAccessException

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# Activar el perfil de Chaos Monkey
spring.profiles.active=chaos-monkey

# Habilitar Chaos Monkey
chaos.monkey.enabled=true

# Configurar los watchers para atacar los servicios
chaos.monkey.watcher.service=true

# Configurar los assaults (ataques)
chaos.monkey.assaults.latencyActive=false
chaos.monkey.assaults.exceptionsActive=true

# Rango de latencia (en milisegundos)
chaos.monkey.assaults.latencyRangeStart=500
chaos.monkey.assaults.latencyRangeEnd=2000

# Nivel de ataque (frecuencia)
chaos.monkey.assaults.level=1

# Habilitar el endpoint de Chaos Monkey
management.endpoints.web.exposure.include=*
management.endpoint.chaosmonkey.enabled=true

#Fallos fijos o aleatorios
chaos.monkey.assaults.deterministic=true

management.endpoint.prometheus.enabled=true
